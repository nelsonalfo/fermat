package com.bitdubai.fermat_cbp_api.layer.business_transaction.common.interfaces;

import com.bitdubai.fermat_cbp_api.all_definition.enums.OriginTransaction;

import java.math.BigDecimal;


/**
 * This class represents a De Stock record for stock transactions
 * Created by Manuel Perez (darkpriestrelative@gmail.com) on 22/12/15.
 */
public class AbstractDeStockRecord {

    public String publicKeyActor;

    public String cbpWalletPublicKey;

    public BigDecimal amount;

    public String memo;

    public BigDecimal priceReference;

    public OriginTransaction originTransaction;

    public String getPublicKeyActor() {
        return publicKeyActor;
    }

    public void setPublicKeyActor(String publicKeyActor) {
        this.publicKeyActor = publicKeyActor;
    }

    public String getCbpWalletPublicKey() {
        return cbpWalletPublicKey;
    }

    public void setCbpWalletPublicKey(String cbpWalletPublicKey) {
        this.cbpWalletPublicKey = cbpWalletPublicKey;
    }

    public BigDecimal getAmount() {
        return amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public String getMemo() {
        return memo;
    }

    public void setMemo(String memo) {
        this.memo = memo;
    }

    public BigDecimal getPriceReference() {
        return priceReference;
    }

    public void setPriceReference(BigDecimal priceReference) {
        this.priceReference = priceReference;
    }

    public OriginTransaction getOriginTransaction() {
        return originTransaction;
    }

    public void setOriginTransaction(OriginTransaction originTransaction) {
        this.originTransaction = originTransaction;
    }

    public String generateMemo(String contractHash) {
        return new StringBuilder().append("DeStock transaction generated by Broker Submit business transaction from").append(" contract ").append(contractHash).toString();
    }

    public String abstractToString() {
        return new StringBuilder()
                .append("AbstractDeStockRecord{")
                .append("publicKeyActor='").append(publicKeyActor)
                .append('\'')
                .append(", cbpWalletPublicKey='").append(cbpWalletPublicKey)
                .append('\'')
                .append(", amount=").append(amount)
                .append(", memo='").append(memo)
                .append('\'')
                .append(", priceReference=").append(priceReference)
                .append(", originTransaction=").append(originTransaction)
                .append('}').toString();
    }
}
