apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

sourceCompatibility = 1.7
version = '1.0'

repositories {
    mavenCentral()
}

//noinspection GroovyAssignabilityCheck
dependencies {

    /**
     * For doing the code more readable, please keep the elements in the file sorted alphabetically:
     * - layer name
     * - plugin name
     */

    compile project(':fermat-api')
    compile project(':fermat-core-api')

    compile project(':fermat-cbp-plugin-actor-network-service-crypto-broker-bitdubai')
    compile project(':fermat-cbp-plugin-actor-network-service-crypto-customer-bitdubai')

    //Actor
    compile project(':fermat-cbp-plugin-actor-crypto-broker-bitdubai')
    compile project(':fermat-cbp-plugin-actor-crypto-customer-bitdubai')

    //Actor Connection
    compile project(':fermat-cbp-plugin-actor-connection-crypto-broker-bitdubai')
    compile project(':fermat-cbp-plugin-actor-connection-crypto-customer-bitdubai')

    //Business Transaction
    compile project(':fermat-cbp-plugin-business-transaction-broker-ack-online-payment-bitdubai')
    compile project(':fermat-cbp-plugin-business-transaction-close-contract-bitdubai')
    compile project(':fermat-cbp-plugin-business-transaction-customer-offline-payment-bitdubai')
    compile project(':fermat-cbp-plugin-business-transaction-customer-online-payment-bitdubai')
    compile project(':fermat-cbp-plugin-business-transaction-open-contract-bitdubai')

    //Negotiation Transaction
    compile project(':fermat-cbp-plugin-negotiation-transaction-customer-broker-new-bitdubai')
    compile project(':fermat-cbp-plugin-negotiation-transaction-customer-broker-update-bitdubai')
    compile project(':fermat-cbp-plugin-negotiation-transaction-customer-broker-close-bitdubai')

    //Contract
    compile project(':fermat-cbp-plugin-contract-customer-broker-purchase-bitdubai')
    compile project(':fermat-cbp-plugin-contract-customer-broker-sale-bitdubai')

    //Identity
    compile project(':fermat-cbp-plugin-identity-crypto-broker-bitdubai')
    compile project(':fermat-cbp-plugin-identity-crypto-customer-bitdubai')

    //Negotiation
    compile project(':fermat-cbp-plugin-negotiation-customer-broker-purchase-bitdubai')
    compile project(':fermat-cbp-plugin-negotiation-customer-broker-sale-bitdubai')

    //Network Service
    compile project(':fermat-cbp-plugin-network-service-transaction-transmission-bitdubai')
    compile project(':fermat-cbp-plugin-network-service-negotiation-transmission-bitdubai')

    //Stock Transactions
    compile project(':fermat-cbp-plugin-stock-transactions-bank-money-destock-bitdubai')
    compile project(':fermat-cbp-plugin-stock-transactions-bank-money-restock-bitdubai')
    compile project(':fermat-cbp-plugin-stock-transactions-cash-money-restock-bitdubai')
    compile project(':fermat-cbp-plugin-stock-transactions-cash-money-destock-bitdubai')
    compile project(':fermat-cbp-plugin-stock-transactions-crypto-money-destock-bitdubai')
    compile project(':fermat-cbp-plugin-stock-transactions-crypto-money-restock-bitdubai')

    //Sub App Module
    compile project(':fermat-cbp-plugin-sub-app-module-crypto-broker-identity-bitdubai')
    compile project(':fermat-cbp-plugin-sub-app-module-crypto-customer-identity-bitdubai')

    //Wallet Module
    compile project(':fermat-cbp-plugin-wallet-module-crypto-broker-bitdubai')
    compile project(':fermat-cbp-plugin-wallet-module-crypto-customer-bitdubai')

    //World Layer
    compile project(':fermat-cbp-plugin-world-fiat-index-bitdubai')

    //Crypto Broker Wallet
    compile project(':fermat-cbp-plugin-wallet-crypto-broker-bitdubai')

    //User Level Business Transaction
    compile project(':fermat-cbp-plugin-user-level-business-transaction-customer-broker-purchase-bitdubai')
    compile project(':fermat-cbp-plugin-user-level-business-transaction-customer-broker-sale-bitdubai')

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

pmd {
    toolVersion = '5.1.3'
}

tasks.withType (FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

def jacocoHtmlReport = ""

jacocoTestReport{
    reports{
        jacocoHtmlReport = "Code Coverage HTML Report: file://" + html.destination + "/index.html"
    }
}

task testCoverage(dependsOn: jacocoTestReport) << {
    println jacocoHtmlReport
}

jacocoTestReport.dependsOn clean, test
jacocoTestReport.mustRunAfter test
test.mustRunAfter clean
